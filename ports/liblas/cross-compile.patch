diff --git a/cmake/liblas-config-version.cmake.in b/cmake/liblas-config-version.cmake.in
index f9b7c7c..fdd07fd 100644
--- a/cmake/liblas-config-version.cmake.in
+++ b/cmake/liblas-config-version.cmake.in
@@ -5,6 +5,21 @@ set(PACKAGE_VERSION_MAJOR "@LIBLAS_VERSION_MAJOR@")
 set(PACKAGE_VERSION_MINOR "@LIBLAS_VERSION_MINOR@")
 set(PACKAGE_VERSION_PATCH "@LIBLAS_VERSION_PATCH@")
  
+# Convert the crosscompiling to a boolean integer
+# This allows us to compare them using EQUAL
+# (STREQUAL could lead to issues if one is "FALSE" and the other "OFF")
+if (CMAKE_CROSSCOMPILING)
+    set(CMAKE_CROSSCOMPILING_CURRENT 1)
+else()
+    set(CMAKE_CROSSCOMPILING_CURRENT 0)
+endif()
+
+if ("@CMAKE_CROSSCOMPILING@")
+    set(CMAKE_CROSSCOMPILING_EXPECTED 1)
+else()
+    set(CMAKE_CROSSCOMPILING_EXPECTED 0)
+endif()
+
 if (NOT PACKAGE_FIND_NAME STREQUAL "@PROJECT_NAME@")
   # Check package name (in particular, because of the way cmake finds
   # package config files, the capitalization could easily be "wrong").
@@ -22,9 +37,9 @@ elseif (MSVC AND NOT MSVC_VERSION STREQUAL "@MSVC_VERSION@")
   # Reject if there's a mismatch in MSVC compiler versions
   set (REASON "_MSC_VER = @MSVC_VERSION@")
   set (PACKAGE_VERSION_UNSUITABLE TRUE)
-elseif (NOT CMAKE_CROSSCOMPILING STREQUAL "@CMAKE_CROSSCOMPILING@")
+elseif (NOT CMAKE_CROSSCOMPILING_CURRENT EQUAL CMAKE_CROSSCOMPILING_EXPECTED)
   # Reject if there's a mismatch in ${CMAKE_CROSSCOMPILING}
-  set (REASON "cross-compiling = @CMAKE_CROSSCOMPILING@")
+  set (REASON "expected CMAKE_CROSSCOMPILING = @CMAKE_CROSSCOMPILING@, found ${CMAKE_CROSSCOMPILING}")
   set (PACKAGE_VERSION_UNSUITABLE TRUE)
 elseif (PACKAGE_FIND_VERSION)
   if (PACKAGE_FIND_VERSION VERSION_EQUAL PACKAGE_VERSION)
